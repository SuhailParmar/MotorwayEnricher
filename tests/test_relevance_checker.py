from lib.relevance_checker import RelevanceChecker

test_tweet = {
    "closest_cities": [
        "Stafford (N)",
        "Stoke / Newcastle-u-Lyme"
    ],
    "direction": "n",
    "extra_information": [],
    "id": 1052482906797428736,
    "junction": [
        14,
        15
    ],
    "metadata": "Event Generated by Tweet Miner at 2018-10-20T20:50:12.286910",
    "motorway": 6,
    "reason": "congestion",
    "time_day_numerical": 17,
    "time_day_worded": "Wed",
    "time_hour": 8,
    "time_minutes": 54,
    "time_seconds": 13,
    "time_timestamp": "2018-10-17T08:54:13",
    "time_year": 2018
}


class TestRelevanceChecker:

    rc = RelevanceChecker()
    mw, js, ds = rc.create_eng_keywords_from_tweet(test_tweet)

    def test_create_keywords(self):

        assert self.mw == ["m6"]
        assert len(self.js) == 6
        assert self.js[0] == 'j14'
        assert self.js[3] == 'j15'
        assert len(self.ds) == 3
        assert self.ds[0] == 'northbound'

    def test_find_relevant_tweets(self):

        t1 = "The m6 junction 14 is rammed!"
        t2 = " m6 j15 is so busy"
        t3 = " m6 j13 is so busy"  # Irrelevant

        documents = [t1, t2, t3]
        response = self.rc.find_relevant_tweets(
            documents, self.mw, self.js, self.ds)
        assert len(response) == 2
        assert response[0] == t1
        assert response[1] == t2

    # M60 bug
